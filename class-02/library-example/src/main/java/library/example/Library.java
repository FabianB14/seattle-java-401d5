/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package library.example;

import java.util.ArrayList;

public class Library {
    public static boolean someLibraryMethod() {
        return true;
    }

    public static boolean doesItMakeGingerHappy(String thing) {

        ArrayList<String> sadThings = new ArrayList<>();
        sadThings.add("No water");
        sadThings.add("Cats");
        sadThings.add("Confinement");

        sadThings.size();
//        String[] sadThings = "No water,Cats,Confinement".split(",");
        for( String sadThing : sadThings ) {

            if(sadThing.equals(thing)) {
                return false;
            }
        }

        ArrayList<Integer> nums = new ArrayList<>();
        nums.add(7);
        return true;
    }

    public static double getAverage(int[] nums) { //O(n)
        int sum = 0;
        for (int n : nums) { // n
            sum += n;// 1
        }
        return ((double) sum) / ((double) nums.length);
    }

    public static int[] findArrayWithSmallestAverage(int[][] arrs) {
        // save best option so far
        int[] bestSoFar = arrs[0]; // 1
        // for each array:
        for (int[] currentArray : arrs) { // runs n times, length of the outer array
            // get the average of that array
            if(getAverage(currentArray) < getAverage(bestSoFar)) { // m
                bestSoFar = currentArray; // 1
            }
        }
        return bestSoFar; // 1
        // O(1 + n * (m + m + 1) )
        // O(1 + n * (2m + 1) )
        // O(1 + 2mn + n)
        // O(mn + n)
        // O(n * m)
        // at the end, return the array that is best so far
    }

}
